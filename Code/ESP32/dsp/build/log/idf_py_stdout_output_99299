[1/9] Performing build step for 'bootloader'
[1/1] cd /Users/duane/Code/personal/projects/hifi-amplifier/Code/ESP32/dsp/build/bootloader/esp-idf/esptool_py && /Users/duane/.espressif/python_env/idf5.5_py3.9_env/bin/python /Users/duane/Code/Github/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/duane/Code/personal/projects/hifi-amplifier/Code/ESP32/dsp/build/bootloader/bootloader.bin
Bootloader binary size 0x5290 bytes. 0x2d70 bytes (35%) free.
[2/9] No install step for 'bootloader'
[3/9] Completed 'bootloader'
[4/9] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/dsp.cpp.obj
[5/9] Linking C static library esp-idf/main/libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable main.elf
[8/9] Generating binary image from built executable
esptool.py v4.9.dev3
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/duane/Code/personal/projects/hifi-amplifier/Code/ESP32/dsp/build/main.bin
[9/9] cd /Users/duane/Code/personal/projects/hifi-amplifier/Code/ESP32/dsp/build/esp-idf/esptool_py && /Users/duane/.espressif/python_env/idf5.5_py3.9_env/bin/python /Users/duane/Code/Github/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/duane/Code/personal/projects/hifi-amplifier/Code/ESP32/dsp/build/partition_table/partition-table.bin /Users/duane/Code/personal/projects/hifi-amplifier/Code/ESP32/dsp/build/main.bin
main.bin binary size 0x3dae0 bytes. Smallest app partition is 0x100000 bytes. 0xc2520 bytes (76%) free.
